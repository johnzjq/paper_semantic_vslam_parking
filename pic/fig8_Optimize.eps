%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 563.000000 336.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 563 336
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 563 336
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /I put
dup 34 /M put
dup 35 /U put
dup 36 /u put
dup 37 /n put
dup 38 /s put
dup 39 /a put
dup 40 /l put
dup 41 /space put
dup 42 /h put
dup 43 /p put
dup 44 /e put
dup 45 /w put
dup 46 /i put
dup 47 /t put
dup 48 /o put
dup 49 /D put
dup 50 /g put
dup 51 /c put
dup 52 /fi put
dup 53 /d put
dup 54 /r put
dup 55 /m put
dup 56 /x put
dup 57 /hyphen put
dup 58 /y put
dup 59 /N put
dup 60 /b put
dup 61 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




001900010000111239303113113311343E0233321615113311342E0223220E02072311405513263927313855112A443317312D240A0202CAFD360124233B2C183830FEA201542A45321C0A1521180111000200450000009A02CA00030007002FBA0001000200032BB8000110B8000210B80004D0B8000110B80006D000B800052FBA0001000000032BB800011030311335231D011133119A5555026268685DFDFB020500000100450000020702CA000B0033BA000B000000032BB8000B10B80002D000B800012FB800052FB800002FBA000800010000111239BA000A000100001112393031131133353713330337230711455550B16CDCCD72EC02CAFD36C44AFEF20149BCE201A7000100450000009A02CA00030017BA0003000000032BB800031000B800012FB800002F303113113311455502CAFD3602CA00000000010040000003150211002A00B7BA0003000000032BB8000310B8000DDC4103005F000D00015D4103008F000D00015D41030020000D00015D410300B0000D00015DB80010DCB80018DC4103008F001800015D4103005F001800015D41030020001800015D410300B0001800015DB8001BDCBA0023000D0010111239B8000310B80028D0B800282FBA002900000003111239B8001B10B8002CDC00B800012FB8000E2FB800192FBA0026000800032BB8002610B8000810B80013D0B8002610B80020D0303113113311343E0233321E0215113311343633321E0215113311342E02232206072E01232207233540550F2135251D25160955483F1F27160855192D3F2733551A104E306D3A020205FDFB01420F2D2A1E111F2A19FEAD01423C48121F2A18FEAD017B283924112E2A3028584C00000000010040000001EC021100170045BA0003000000032BB8000310BA000E000B00032BB8000E10B8000310B80015D0B800152FBA00160000000311123900B800012FB8000C2FBA0013000800032BB8001310303113113311343E0233321615113311342E022322072335405513263927313855112A44337335020205FDFB0124233B2C183830FEA201542A45321C5E520000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21


022C0040023E002402510043014D003D01F4001F013B0009022C004002F600110206000901F400080206000C04BE0037000000480048005A00C200DC01260166019C02A6033E03B0044E04B6056805BA05E40616063006CA071207B2084A0878091C096E09BE09F80A240A8E0B080B3E00010000001F0096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/D 3 def
/I 4 def
/M 5 def
/N 6 def
/U 7 def
/a 8 def
/b 9 def
/c 10 def
/d 11 def
/e 12 def
/g 13 def
/h 14 def
/i 15 def
/k 16 def
/l 17 def
/m 18 def
/n 19 def
/o 20 def
/p 21 def
/r 22 def
/s 23 def
/t 24 def
/u 25 def
/w 26 def
/x 27 def
/y 28 def
/fi 29 def
/uni2B91 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9310E889D4B294081CFBE92AFCC7FE3BB36C58496644FE561335DE1474FE8AD03205701574C44B4D576342C56A9D706E281EA108DEB8D3620968689F108F42E3465F4907B536F4FE9D04E7B81671C8015D28B6AEAA2F95E411CFBE9B6F24E72233C8DF2ECB36E74E3F1236F97BF84CA405ECC29993675B09053BED2A0416743F53CC0A4D5CEE5647431CDF918B3043830AA056F4C8115DF97C9FACED8015A5003203A630D8C3CE4F7FC481DEE1F46A69F274AACD3D86EE11CC939C1BFD7C1E8D0AD4435806585633BBA0E7CFC494B92EF36D3DF3253A7B0A3CA0683ED85A03D2FF0B2C6D510245EE990749BEAE9693570F910DA8020D435B1BBEAFC033E51F5E7D20A81ABD6A3B6942D549FCFC93F2816E6312706B1F55431356CA2E15DC86119D6078890485D2B2933000F152CAA9008D1D621E14822F634AFEB8AACD51FFA215F86126FF006583610CE8C570D3BC5305C00CEC56C8FA05A689058F3E2261B46B1C8435617E24B719F65F8BAEE60497C9EB2E40F96095753C88C7B164BA28ECFA00FC2C33EF82917AC4079FA0C82CB2341BF17908A23571AFB4BCD9CCEAF6803210F0E4EF700592D2256B5588973BBD93FAF667B65BB833C0A8C064D8052DE04C4BA1043148A493478306B457FF541968D39D30D90045C2DBEF5F215B9F45D517324A3661E04C11F4E527523FEB53BB4D9EC224CD26A31D517A267750D9A2302AED15D8EB9C8A9FA0401F0BBE0BE4C6E5376C9D4BC9C75065C6F113A5C5359CED

FBF0C6FFD8840674D41D35974F73DA5D7AB00A6B9A37CE2EBC8CF6AFF6500EA7B8053AEA8A66CD2F95C8EB541B9DD90AAB0EA6FF8E312547E174B709229C6F05D5404E91492E18CD399604A391FC3131C35AF56299891AFA9832A2EA70A1E2C4DE123872AE28C2D6A814FE15A13B8FD2212264669F1E87035623C362093ED27282B5E0C0631C84BF41D496417A0FBB57DB1F55B051C774CB4BF341AEEAA7A7EE5E190FEC002B4A6EBFD792A90528BB507CB43ABD0B7803015DA540C368746D738B42F557423848329070563F4B2D445C24D859402D366187C80090FD53FB43824E23ED49784B57DB788E559D7B7D2CBD1B72AB072A447A2A614A8E846EF68509E0E3EEACEFC3E7F7A5050D9BD771F66E7A4F0DC9F9954E647B650309FEBDBA02225620164B2B81BC4F8AAEE5D3FB621FCF6C1F2D81FFD13A46C61A2A98183F1583EFC664102314618E6B00F3A763E017A9483BE21E28C4577B0CC643FA7C617BAB822D49ED4F53188ECE85BC0A41FBCC879FDD1B674092F71A1C20DA84CA525E7B224572DC86C1DA8BA8F1DEEB803288F1EACA8A3255C49BF212271CB2A108E0CF6B386C9349DB6EE5A930A277C259D2DC0B1D08F017B43DF86E704A4E453FADBB8583884873AE80232547E127DB9F1A3502B68A2F17911EE4DF5447C7B35C1E9624BA5D6F395947B0D07A655D1C0030E139B123B730777D2E1CF3B83657AF8D38637B9EF29089607A82172EDDE4DB37DAB1814D3A8727C8E3815D02B05EDCD3C2C9F05B9E9F85446AA45B7D338D6DBA0B4FDDA5CE3C61AB297129097C04A87255A8B400F44CADE7E8D19FEB91AE1865987B979EA7BA665BE6BCF2EEA9A3CBA0ACCD463D08C322C1680B9EDD64277CEB397582343A3A00E927B99CE6147F4FD12FDBCDBCB6598B84486748E1472E1E95C9B31546E6D4E6D5F34442ED763810FBDC459C5F2D45B4276ABBEDF9C7942E93812A316B55D81AC63492775B43C69501D0106906F19FDC040013B98E94788503F2FB29F711DA0B297D5FD22118916E705899A63A4426EEC3ECB49151F22ABDBED4662F8714DF52079B5148A4302DC88F70A78AA622D8F995B68B507184D8857C602FA99D1CC2075C02C89E2A3E6D7016A863F0F403E37053A596E0521C31D6920CF45AC0923BC3D41A0EE5E5489865AFAB0CBC8905AAABE33AD7281AF8447142443B5BFA0D83DC9A68C600B13D9366985F7543FBBE1389E67B6A8FD8DF43CA5BE4EC5F1E7DDDEFE28CFA476D20D38BE702A99A7AF02574F801CE3BAADC1F17B3FB75858925D4516D5D42A05480E5B5ABC5120548CABE59B2572C2C85B0E0BA4C3D5146A30FDE3F04034764294A1C50F2343D901FA3286ACC582EB301013D3F3493C4234A913376064E970F90C0367AF0D4A30E73A018FEA8EA96AE2D61F91146A793D9DA2C46A420F0DBC92080E9A242
4D2ADE7B341107C998FBC6152306CF4F59D551036B914268D1167C92EFADA3E093EA0F6452B1B9A91C0B940BD2CD8EA73B89E77AC3AA630011BA37849092CBE0C4C6C725DE6B97B6B5DB852C6763DCD1558B25061639225DBCCB475503B1CE4F97812C16628DFAC613219A91CA44774DC49810C799C74A6D8AAA271D50C2F075D66AE4B7DC019A2B8383FF4F2CBC9118CA4DA51491D8A4AC6F628A9F5B8BD142C244A33724B790B43EF37247E8AFA9CD857A74FA4FB3E2BEFF9E010ADDBDC51FAFD73D459839BD4AE7B90FC9257CF1D17361FEE11D45FA324F2BC7CB4591A67C28A4126E9053804D953AC9F23B7285AC50A66DDBAF32EBFFC2831FE683AD613E1240C81DD0620DC0FBD36625A20D7249EBB2EEF6F0ECFFD4319718A0FE817A58EBEE1A40FC157405E21D57D6EDEADED36EE2D4D332F86CAB6351A047B0C3E0DCBF420C9F37270623281815679FD78F60A8F25080F2DEE3D08F11C37920CC6480450BA76B5EEA2D11AA487A0C0FDF3819EA1261FC2990A00B57A21F067CAE68FBC89E1F19703F9FB9D2B37003DB3A4E465CD1CDD1D004A32A35DD18E91213C7713A1C03699C966A45CEF675DA9F1965F81FBC54F41D75BBD9E3331444B209CEE7E2044E2FB975BEE02058C968D7B65A1C5B64323DB28B60A3F442072335B8BCB31A873A4AFDE0DCC74D7A3A1322B47263856B320A32636F42DFFC2183096369FC5F15E5822B7158BB593D151AB74550008189BE865192465563DA1288385F185C96ED5C6E8D10DADE826CC286B1AF8C829F6DCBE063C941C075C4B78BE8590A9240825E7002E0BA03933DD2C9246B7C59C193A2A6E4E3A5A686CE80112E959D87E8BEBE9AE5ED9D9B619F16D33BC35654075AF3F1A282ADF7536C4FF2418563A5DFBA1E70E0C176D70460F2FD6542802DBDEF70627771DE27CF417E254DCA483434D48343A1ED44F3C00D3CCE793C37DE4DEB84740A11951B2C8F4DCE4A3D3807427C264354DF260ABDD63364AC85E7EF057A644D604F33F9F4CFEA49B1F2845C2A10D2AB4AC50D30E7C395DA215373DA2202C53EF9E93A2457B824A4141C76914C559D3F4722D6A636C80EADAA1574A29309BBA268734BECFEAB13765DB0078D61B12C031B8F4474D457E069CEABE4E35077C9AA19E2C20DFA1D9FB3ADD878DF90247BDC4DF4E72F3219A5515E07644B20BD610FA28D6AA53D1D887BDA2AE5C4CF07F8C887A8CB7346071A3295D705937D4578BF274ED40E65538C1296F6394DD4B66031782509E517F718D549471F2E854281B272B02170DE4B62A9C25C4475BB6FD2BC693DF4575EF28E525A9623065CC168AB4F037E37ED4491C210B3E6EF219BAC0B3C26908E68DF4983B7581EB407AC98F809E6168D99D1010A9CCE1B2DA53E4280754E9B2E78C24ABCCAF73F193588AA63C4607C0DD2228EBA227C92B0

418A1CEF6BBF20C21A51FA383E0F7A453E0B0A49DE75679C9312A840EC67A205FE8E4A6CDD5BF312CD7FF1B402BE1761F3DB40715FA60F19CC12801FBD9A0D8D5FB0D2A55546F64C157075C874
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAB+PingFangHK-Regular 001.003%%CreationDate: 10/31/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAB+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid3 putdup 2 /cid68 putdup 3 /cid71 putdup 4 /cid74 putdup 5 /cid79 putdup 6 /cid87 putdup 7 /cid92 putdup 8 /cid93 putdup 9 /cid1153 putdup 10 /cid1154 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6E466402931C90D722988D44529B002B42235E220C127FD9BB929F92B7850AB4020DE47821D79AA45C0F23B182009366A02C4CE22B0906EDEDFF46A7F98CB1F47F24AFAA6FB81B808BADFFE1162F4B61C2574E789B9CE6A0BC00E1A0D0E1914C225C7EC160AFC8FF3EA182ACE581ED244457205F73BEF211D7314A5AB68F2C64D4200FE333F80591FF34A406EC7DCF12896483A7053FF9C83457E961346C4480BAC65EA15C471E6BAF903AAF05C2CD803A4004E60C9CA420A476074753B12E1AB59F8161AF5D9CC20C2E01510B5EE90061D146E7DCC5187C7859943493F3AC669335AF0CB2D4A5454646FBB9230F0B19DB7F457C11A4BD870768A598718125A0607013699B6373E00385F8D64C8CA2E322E46F52E0829B4C0A590AF572B527E65976588BA3E06B653298DA31D587204368DCA9B54C52ACB1C5FD0A0B8DD5D45C95CB70B1F9822FE8D3DCEDA99355F10B86AEC8BCF4C106C8FD171149E6BF85D48B5DC98BDADA6EE9B162BCBB848177A169DD5D43AF9D5741DC4F760C9BC2A892AAE2BBC9BBB795B96FC41F17464C3DE6F7AE1F45BB992AB8A507949906F6C836A643F4258BD9BB4C20BFCDD01586A297168587EBE600DE48B32004072B5DF60E4D696144AF936F489D5476B8FB895051F7773604B2E39F3B6A80F014B33DAA3DAC86D4218FBE877564C41ED2D241F7AE973086C3C70373A1E4A16DC2CAB01020782C65A35FE33A775277C14D50BBA057F02C8FDADCC378828EB4FC7C851B2D65E09A3D45AC5EAF697E8BE1B723B89986D7141D924036BD7CEC10389BFC93CDE98058AF978813A302B8DB1129E9079BBA0725739186B783F19CC4FEA93E6C41EB26EBEF3C061E0B9F29C4316CACB683B12DB4584FEF623337F04A39E1D4E05C7077F50C565B0BCD2894F3314184526A5B832A598E59A6CDB2A01327A7AA5795019F4A83D49C058FDFA925435AD5212BB639E8A0A07EBD1962B8137AFA7D0E1230F7D922848A71F3C0E5CBC591C4452747999F5CD51AC8BF877F7D0EF9D755E0D14ABD8F96D858ECD5E3A4901683E7CA682DF0277621B54580BC096D8D56C91A11974BCCA7F13AD8C2B3B74B2EDEE7E223F6BD2A81AAEBB1D81BBE70FC88CD94C78723BB4B0CB53AC10FC4124FF621F103B48229B8EAEA544FAFC0C3726192F915385EC6B6579FB033FF7AE9545F90C62D02A4832BE10F80767AABD6AC69151B77CD5B9E70CB5F9727C0C9FDD5EE869E2DB1D7EF028E596DC52D6B9FEF782B11DCDAD19D4798CAC6CCCDF723B62CE50F3C8CB4E92CB53D626ACE17993AD94C6CDD31DFD08E5E95952952E07A4F0EA7C590FCF45DBB70C2A5D60371B819B7E4A7C829F1D0A060238059959C429D1EE815AB5BC156FA366106E55C7068EFDD6908541616D1291B3B1B82B6B21EFC33F960E6DC55898EBA5C0D53A150A5AB165DE41179D2E76F312C5ED5E2857B92F194864D2A42CEFAB276479DD0DDB983D461FFC413D6BCBA79948380F9494EE1F5E3F71675D224117E2AC88678A61501B38C1555054943BF6BFD95258B6F29732AEC9E15FE39B20DC556AE5283144AA7C729C4ABDBBAB91F13FB748E8E7C5E4420E0EC83471B0FB06F87C239AD99E55D664C4E8CC38F33DDFF740800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid87 putdup 34 /cid68 putdup 35 /cid74 putdup 36 /cid1153 putdup 37 /cid79 putdup 38 /cid93 putdup 39 /cid92 putdup 40 /cid3 putdup 41 /cid71 putdup 42 /cid1154 putreadonly def/$SubFontArray [/AAAAAB+PingFangHK-Regular findfont ] def/CharProcs 12 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid3 {(\001) 0 $SP} putdup /cid68 {(\002) 0 $SP} putdup /cid71 {(\003) 0 $SP} putdup /cid74 {(\004) 0 $SP} putdup /cid79 {(\005) 0 $SP} putdup /cid87 {(\006) 0 $SP} putdup /cid92 {(\007) 0 $SP} putdup /cid93 {(\010) 0 $SP} putdup /cid1153 {(\011) 0 $SP} putdup /cid1154 {(\012) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F2.1/PingFangSC-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 563 336 rc
-47 355 m
1108 355 l
1108 -428 l
-47 -428 l
h
-47 355 m
f
0.41960785 0.48627451 0.64705884 sc
9.6929131 33.267719 m
151.4252 33.267719 l
151.4252 9.1732302 l
9.6929131 9.1732302 l
h
9.6929131 33.267719 m
f
/Cs2 SC
0 sc
1 0 0 -1 80.559052 21.220474 cm
/F1.1[ 16 0 0 -16 0 0]sf
-14.816 5.776001 m
(!"#)[ 4.144000 13.936000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
9.6929131 65.866142 m
151.4252 65.866142 l
151.4252 41.771656 l
9.6929131 41.771656 l
h
9.6929131 65.866142 m
f
/Cs2 SC
0 sc
1 0 0 -1 80.559052 53.818897 cm
/F2.1[ 16 0 0 -16 0 0]sf
-12.04 6 m
(!"#)[ 5.680000 8.944000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
66.385826 326.65353 m
151.4252 326.65353 l
151.4252 269.96063 l
66.385826 269.96063 l
h
66.385826 326.65353 m
f
/Cs2 SC
0 sc
1 0 0 -1 108.90551 298.3071 cm
/F1.1[ 16 0 0 -16 0 0]sf
-27.864 -3.447998 m
($%$&$'\(\))[ 8.896000 8.896000 8.896000 8.000000 8.896000 8.592000 3.552000 0.000000 ] xS
-21.784 15 m
(&*'+,)[ 8.000000 8.896000 8.592000 9.488000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
66.385826 261.4567 m
151.4252 261.4567 l
151.4252 204.76378 l
66.385826 204.76378 l
h
66.385826 261.4567 m
f
/Cs2 SC
0 sc
1 0 0 -1 108.90551 233.11023 cm
-36.296001 5.776001 m
(-./*0$/\)!1)[ 12.128000 3.552000 5.040000 8.896000 9.184000 8.896000 5.040000 4.448000 4.144000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
66.385826 131.06299 m
151.4252 131.06299 l
151.4252 74.370079 l
66.385826 74.370079 l
h
66.385826 131.06299 m
f
/Cs2 SC
0 sc
1 0 0 -1 108.90551 102.71654 cm
/F1.1[ 12 0 0 -12 0 0]sf
-24.222 -3.3359985 m
(-./*\)*.2*\))[ 9.096000 2.664000 3.780000 6.672000 3.336000 6.672000 2.664000 6.888000 6.672000 0.000000 ] xS
-37.116001 11 m
(30%45,%3,\)!1)[ 6.444000 6.888000 6.672000 6.216000 7.116000 6.444000 6.672000 6.444000 6.444000 3.336000 3.108000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
66.385826 196.25984 m
151.4252 196.25984 l
151.4252 139.56693 l
66.385826 139.56693 l
h
66.385826 196.25984 m
f
/Cs2 SC
0 sc
1 0 0 -1 108.90551 167.91339 cm
-22.098 -3.3359985 m
(-./*\)\(0-\))[ 9.096000 2.664000 3.780000 6.672000 3.336000 2.664000 6.888000 9.096000 0.000000 ] xS
-37.116001 11 m
(30%45,%3,\)!1)[ 6.444000 6.888000 6.672000 6.216000 7.116000 6.444000 6.672000 6.444000 6.444000 3.336000 3.108000 0.000000 ] xS
/Cs1 SC
0.87058824 0.67843139 0.14901961 sc
CM
159.92914 326.65353 m
553.94489 326.65353 l
553.94489 269.96063 l
159.92914 269.96063 l
h
159.92914 326.65353 m
f
/Cs2 SC
0 sc
1 0 0 -1 356.93701 298.3071 cm
/F1.1[ 16 0 0 -16 0 0]sf
-26.375999 5.776001 m
(5.&3'65)[ 9.488000 3.552000 8.000000 8.592000 8.592000 5.040000 0.000000 ] xS
/Cs1 SC
0.87058824 0.67843139 0.14901961 sc
CM
159.92914 131.06299 m
553.94489 131.06299 l
553.94489 74.370079 l
159.92914 74.370079 l
h
159.92914 131.06299 m
f
/Cs2 SC
0 sc
1 0 0 -1 356.93701 102.71654 cm
-153.81599 5.776001 m
('55\)7'897.8/$6,\),52,\)-./*\)%$\(\(\)*:+0/*,&.&)[ 8.592000 9.488000 9.488000 4.448000 13.648000 8.592000 8.288000 6.224000 13.648000 3.552000 8.288000 5.040000 8.896000 5.040000 8.592000 4.448000 8.592000 9.488000 9.184000 8.592000 4.448000 12.128000 3.552000 5.040000 8.896000 4.448000 8.896000 8.896000 3.552000 3.552000 4.448000 8.896000 8.000000 9.488000 9.184000 5.040000 8.896000 8.592000 8.000000 3.552000 0.000000 ] xS
/Cs1 SC
0.87058824 0.67843139 0.14901961 sc
CM
159.92914 261.4567 m
244.96851 261.4567 l
244.96851 139.56693 l
159.92914 139.56693 l
h
159.92914 261.4567 m
f
/Cs2 SC
0 sc
1 0 0 -1 202.44882 200.51181 cm
-27.704 -21.671997 m
(;,'6,&/\))[ 11.552000 8.592000 8.592000 5.040000 8.592000 8.000000 5.040000 0.000000 ] xS
-32.888 -3.223999 m
(;,.2*<06)[ 11.552000 8.592000 3.552000 9.184000 8.896000 9.488000 9.184000 0.000000 ] xS
-22.528 15.223999 m
("'/3*)[ 13.936000 8.592000 5.040000 8.592000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
253.47244 261.4567 m
324.33859 261.4567 l
324.33859 204.76378 l
253.47244 204.76378 l
h
253.47244 261.4567 m
f
/Cs2 SC
0 sc
1 0 0 -1 288.90552 233.11023 cm
/F1.1[ 13 0 0 -13 0 0]sf
-7.3449998 -11.045998 m
(%0\))[ 7.228000 7.462000 0.000000 ] xS
-28.775499 4.3180008 m
(3'%5.5'/,\))[ 6.981000 6.981000 7.228000 7.709000 2.886000 7.709000 6.981000 4.095000 6.981000 0.000000 ] xS
-7.2214999 19.681999 m
(\(0/)[ 2.886000 7.462000 0.000000 ] xS
/Cs1 SC
0.87058824 0.67843139 0.14901961 sc
CM
332.84253 261.4567 m
432.05511 261.4567 l
432.05511 204.76378 l
332.84253 204.76378 l
h
332.84253 261.4567 m
f
/Cs2 SC
0 sc
1 0 0 -1 382.44882 233.11023 cm
/F1.1[ 11 0 0 -11 0 0]sf
-18.133499 -16.461998 m
(&/06,\).%\))[ 5.500000 3.465000 6.314000 3.465000 5.907000 3.058000 2.442000 6.116000 0.000000 ] xS
-25.1625 -4.1539993 m
(/,7+06'6:)[ 3.465000 5.907000 9.383000 6.523000 6.314000 3.663000 5.907000 3.663000 0.000000 ] xS
-24.354 8.1539993 m
(\)\('%57'6=\))[ 3.058000 2.442000 5.907000 6.116000 6.523000 9.383000 5.907000 3.663000 5.709000 0.000000 ] xS
-42.922001 22.461998 m
(+00\()[ 6.523000 6.314000 6.314000 0.000000 ] xS
/F2.1[ 11 0 0 -11 0 0]sf
-21.329 22.461998 m
($%"&'\("\)\)*)[ 11.000000 2.585000 6.149000 5.357000 5.456000 3.663000 6.149000 6.446000 6.446000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
253.47244 196.25984 m
432.05511 196.25984 l
432.05511 139.56693 l
253.47244 139.56693 l
h
253.47244 196.25984 m
f
/Cs2 SC
0 sc
1 0 0 -1 342.76376 167.91339 cm
/F1.1[ 16 0 0 -16 0 0]sf
-70.096001 5.776001 m
(7$\(/.\)3'%5.5'/,\)\(0/&)[ 13.648000 8.896000 3.552000 5.040000 3.552000 4.448000 8.592000 8.592000 8.896000 9.488000 3.552000 9.488000 8.592000 5.040000 8.592000 4.448000 3.552000 9.184000 5.040000 0.000000 ] xS
/Cs1 SC
0.87058824 0.67843139 0.14901961 sc
CM
440.55905 261.4567 m
553.94489 261.4567 l
553.94489 139.56693 l
440.55905 139.56693 l
h
440.55905 261.4567 m
f
/Cs2 SC
0 sc
1 0 0 -1 497.25195 200.51181 cm
-34.383999 -30.895996 m
('55\)7'89)[ 8.592000 9.488000 9.488000 4.448000 13.648000 8.592000 8.288000 0.000000 ] xS
-46.68 -12.447998 m
(7.8/$6,\),52,\))[ 13.648000 3.552000 8.288000 5.040000 8.896000 5.040000 8.592000 4.448000 8.592000 9.488000 9.184000 8.592000 0.000000 ] xS
-34.375999 6 m
(-./*\)7$\(/.\))[ 12.128000 3.552000 5.040000 8.896000 4.448000 13.648000 8.896000 3.552000 5.040000 3.552000 0.000000 ] xS
-38.824001 24.447998 m
(*:+0/*,&.&)[ 8.896000 8.000000 9.488000 9.184000 5.040000 8.896000 8.592000 8.000000 3.552000 0.000000 ] xS
/Cs1 SC
0.87058824 0.67843139 0.14901961 sc
CM
159.92914 65.866142 m
553.94489 65.866142 l
553.94489 9.1732302 l
159.92914 9.1732302 l
h
159.92914 65.866142 m
f
/Cs2 SC
0 sc
1 0 0 -1 356.93701 37.519688 cm
-58.984001 5.776001 m
('55\)60<$&/\),52,)[ 8.592000 9.488000 9.488000 4.448000 5.040000 9.184000 9.488000 8.896000 8.000000 5.040000 4.448000 8.592000 9.488000 9.184000 0.000000 ] xS
/Cs1 SC
0.41960785 0.48627451 0.64705884 sc
CM
9.6929131 326.65353 m
57.881889 326.65353 l
57.881889 74.370079 l
9.6929131 74.370079 l
h
9.6929131 326.65353 m
f
/Cs2 SC
0 sc
1 0 0 -1 33.787399 200.51181 cm
-8.8879995 5.776001 m
(\(0/)[ 3.552000 9.184000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
